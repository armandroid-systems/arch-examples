# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.59.0"

default_platform :android

platform :android do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
    slack(
          message: "App successfully TESTED!",
          channel: "#release_notifications",  # Optional, by default will post to the default channel configured for the POST URL.
          success: true,        # Optional, defaults to true.
          )
  end

  desc "Run instrumentation test"
  lane :insttest do
    gradle(task: "cAT")
    slack(
              message: "App UI TEST EXECUTED :D!",
              channel: "#release_notifications",  # Optional, by default will post to the default channel configured for the POST URL.
              success: true,        # Optional, defaults to true.
              )
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "assembleRelease")
    crashlytics
    slack(
              message: "NEW BETA RELEASE ;)",
              channel: "#release_notifications",  # Optional, by default will post to the default channel configured for the POST URL.
              success: true,        # Optional, defaults to true.
              )

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "assembleRelease")
    supply
  end

  desc "My first lane before go to rest"
  lane :buildDebug do
    gradle(task: "assembleDebug")
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
